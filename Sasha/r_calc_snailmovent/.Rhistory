sp_df_h[2:nrow(sp_df_h), 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
sp_df_h[2:nrow(sp_df_h), 1]
sp_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
sp_df_h
kable(sp_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь скорости движения с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p") )
model_Hydr2_sd <-
Barbar %>% filter(Species == "Hydrobia") %>%
aov(Sd ~ Aperture_size * Status, data = .)
sd_df_h <- tidy(model_Hydr2_sd)
kable(sd_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь вариабельности направления движения с размером и статусом гидробий.")
model_Hydr2_Tt <-
Barbar %>% filter(Species == "Hydrobia") %>%
aov(Turn_time ~ Aperture_size * Status, data = .)
Tt_df_h <- tidy(model_Hydr2_Tt)
kable(Tt_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь времени подготовки к движению с размером и статусом гидробий.")
ggplot(Hydr, aes(y = Speed, x = Aperture_size)) +
geom_point(aes(color = Status)) +
geom_smooth(method = 'lm') +
theme_bw() +
labs(x = "Размер устья", y = "Скорость передвижения")
ggplot(Litt2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
snail_move
snail_move2
e
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move <- read_excel("Data/snail_movement_2023.xlsx", na = "NA")
snail_move2
snail_move2$Trait <- factor(snail_move2$Trait, levels("Speed", "SD", "T"))
snail_move2$Trait <- factor(snail_move2$Trait, levels(c("Speed", "SD", "T")))
snail_move2$Trait
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move2$Trait <- factor(snail_move2$Trait)
snail_move2$Trait
levels(snail_move2$Trait) <- c("Speed", "SD", "T")
snail_move2$Trait
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move2$Trait <- factor(snail_move2$Trait)
levels(snail_move2$Trait) <- c("Speed", "SD", "T")
snail_move <- read_excel("Data/snail_movement_2023.xlsx", na = "NA")
Litt2 <- snail_move2 %>% filter(Species == "Littorina")
Hydr2 <- snail_move2 %>% filter(Species == "Hydrobia")
Barbar <- snail_move %>% filter(Barbarity == "Barbar")
Litt <- snail_move %>% filter(Species == "Littorina")
Hydr <- snail_move %>% filter(Species == "Hydrobia")
ggplot(Hydr2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move2$Trait <- factor(snail_move2$Trait)
snail_move2$Trait <- relevel(snail_move2$Trait, ref = "Speed")
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move2$Trait <- factor(snail_move2$Trait)
snail_move2$Trait <- relevel(snail_move2$Trait, ref = "Speed")
snail_move <- read_excel("Data/snail_movement_2023.xlsx", na = "NA")
Litt2 <- snail_move2 %>% filter(Species == "Littorina")
Hydr2 <- snail_move2 %>% filter(Species == "Hydrobia")
Barbar <- snail_move %>% filter(Barbarity == "Barbar")
Litt <- snail_move %>% filter(Species == "Littorina")
Hydr <- snail_move %>% filter(Species == "Hydrobia")
ggplot(Hydr2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
ggplot(Litt2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
ggplot(Barbar, aes(x = Aperture_size, y = Speed, fill = Status, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
labs(x = "Размер устья", y = "Скорость передвижения")
ggplot(Barbar, aes(x = Aperture_size, y = Speed, fill = Status, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
labs(x = "Размер устья", y = "Скорость передвижения")
ggplot(Barbar, aes(x = Aperture_size, y = Speed, fill = Status, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Barbar, aes(x = Aperture_size, y = Speed, fill = Status, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status) +
guides(color = "none")
ggplot(Barbar, aes(x = Aperture_size, y = Speed, fill = Status, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
model_Litt2_Speed <-
Litt %>% aov (Speed ~ Aperture_size * Status, data = .)
sp_df_l <- tidy(model_Litt2_Speed)
kable(sp_df_l, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь скорости движения с размером и статусом литторин.")
model_Litt2_Sd <-
Barbar %>% filter(Species == "Littorina") %>%
aov(Sd ~ Aperture_size * Status, data = .)
sd_df_l <- tidy(model_Litt2_Sd)
kable(sd_df_l, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь вариабельности движения с размером и статусом литторин.")
model_Litt2_Sd <-
Barbar %>% filter(Species == "Littorina") %>%
aov(Sd ~ Aperture_size * Status, data = .)
sd_df_l <- tidy(model_Litt2_Sd)
kable(sd_df_l, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь вариабельности движения с размером и статусом литторин.")
model_Litt2_Tt <-
Barbar %>% filter(Species == "Littorina") %>%
aov(Turn_time ~ Aperture_size * Status, data = .)
Tt_df_l <- tidy(model_Litt2_Tt)
kable(Tt_df_l, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь времени начала движения с размером и статусом литторин.")
aov(Sd ~ Aperture_size * Status, data = .)
model_Litt2_Sd
summary(model_Litt2_Sd)
<<<<<<< HEAD
citation()
=======
![Рисунок ++. Внешний вид эксперимента](Figures/trek_example.png)
library(knitr)
opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(broom)
library(clipr)
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move2$Trait <- factor(snail_move2$Trait)
snail_move2$Trait <- relevel(snail_move2$Trait, ref = "Speed")
snail_move <- read_excel("Data/snail_movement_2023.xlsx", na = "NA")
Litt2 <- snail_move2 %>% filter(Species == "Littorina")
Hydr2 <- snail_move2 %>% filter(Species == "Hydrobia")
Barbar <- snail_move %>% filter(Barbarity == "Barbar")
Litt <- snail_move %>% filter(Species == "Littorina")
Hydr <- snail_move %>% filter(Species == "Hydrobia")
![Рисунок ++. Внешний вид эксперимента](Figures/trek_example.png)
ggplot(Hydr, aes(y = Speed, x = Aperture_size)) +
geom_point(aes(color = Status)) +
geom_smooth(method = 'lm') +
theme_bw() +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
kable(sp_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь скорости движения с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
kable(Tt_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь времени подготовки к движению с размером и статусом гидробий.")
sp_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
kable(sd_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь вариабельности направления движения с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
sp_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
citation()
![Рисунок ++. Внешний вид эксперимента](Figures/Picture_1.png)
bib <- read.bib(package = "bibtex")
install.packages("bibtex")
library(bibtex)
updateR()
library(installr)
sessionInfo()
library(bibtex)
bib <- read.bib(package = "bibtex")
View(bib)
read.bib(file = bibliographi(package),
package = "bibtex",
encoding = "unknown",
header,
footer
rite.bib(entry, file = "Rpackages.bib", append = FALSE, verbose = TRUE)
rite.bib(entry, file = "Rpackages.bib", append = FALSE, verbose = TRUE)
write.bib(entry, file = "Rpackages.bib", append = FALSE, verbose = TRUE)
write.bib(0, file = "Rpackages.bib", append = FALSE, verbose = TRUE)
write.bib(file = "Rpackages.bib", append = FALSE, verbose = TRUE)
write.bib(bibs, "references2.bib")
read.bib(file = bibliographi(package),
package = "bibtex",
encoding = "unknown",
header,
footer
write.bib(bibs, "references2.bib")
read.bib(file = bibliographi(package),
package = "bibtex",
encoding = "unknown",
header,
footer,
write.bib(bibs, "references2.bib")
write.bib(bibs, "references2.bib")
read.bib(file = bibliographi(package),
package = "bibtex",
encoding = "unknown",
header,
footer,
bibs <- read.bib("bibliographi.bib")
write.bib(bibs, "bibliographi.bib")
write.bib(bibs, "bibliographi")
write.bib("bibliographi")
bibs <- read.bib("bibliographi.bib")
bibs <- read.bib("bibliographi.bib")
Одними из наиболее многочисленных форм, населяющих скопления мидий, оказываются брюхоногие моллюски (представители семейства *Littorinidae*  и *Hydrobiidae*). В работе В. М. Хайтова и А. В. Артемьева ~@khaitov2004 было показано, что в мидиевых друзах количество мертвых улиток значительно превышает их обилие за пределами скопления мидий. Авторы предположили, что моллюски привлеченные обилием детрита, попав в друзу испытывают на себе негативное воздействие из-за чего умирают и их раковины накапливаются в друзах. Однако прямых доказатеьств в пользу этой гипотезы  не было найденно. В работе Кириловой [@kiril2016] изучался выбор субстрата брюхоногими моллюсками *Littorina* и *Hydrobia*. В этойс работе было показано, что гидробии больше тяготеют к мидиям, как к биологически активному субстрату, в то время как литторин привлекала твердая поверхность, как таковая (раковины мертвых мидий), при этом улитки избегли  скоплений живых мидий.
# Chunk 1: setup
library(knitr)
opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
options(knitr.kable.NA = '')
# Chunk 2: packages
library(readxl)
library(ggplot2)
library(dplyr)
library(broom)
library(clipr)
library(bibtex)
# Chunk 3: read_data
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move2$Trait <- factor(snail_move2$Trait)
snail_move2$Trait <- relevel(snail_move2$Trait, ref = "Speed")
snail_move <- read_excel("Data/snail_movement_2023.xlsx", na = "NA")
Litt2 <- snail_move2 %>% filter(Species == "Littorina")
Hydr2 <- snail_move2 %>% filter(Species == "Hydrobia")
Barbar <- snail_move %>% filter(Barbarity == "Barbar")
Litt <- snail_move %>% filter(Species == "Littorina")
Hydr <- snail_move %>% filter(Species == "Hydrobia")
# Chunk 4
ggplot(Hydr2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
# Chunk 5
ggplot(Hydr, aes(y = Speed, x = Aperture_size)) +
geom_point(aes(color = Status)) +
geom_smooth(method = 'lm') +
theme_bw() +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
# Chunk 6
model_Hydr2_sp <-
Barbar %>% filter(Species == "Hydrobia") %>%
aov(Speed ~ Aperture_size * Status, data = .)
sp_df_h <- tidy(model_Hydr2_sp)
sp_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
kable(sp_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь скорости движения с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
# Chunk 7
model_Hydr2_sd <-
Barbar %>% filter(Species == "Hydrobia") %>%
aov(Sd ~ Aperture_size * Status, data = .)
sd_df_h <- tidy(model_Hydr2_sd)
sd_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
kable(sd_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь вариабельности направления движения с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
# Chunk 8
model_Hydr2_Tt <-
Barbar %>% filter(Species == "Hydrobia") %>%
aov(Turn_time ~ Aperture_size * Status, data = .)
Tt_df_h <- tidy(model_Hydr2_Tt)
Tt_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
kable(Tt_df_h, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь времени подготовки к движению с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
# Chunk 9
ggplot(Litt2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
# Chunk 10
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
# Chunk 11
model_Litt2_Speed <-
Litt %>% aov (Speed ~ Aperture_size * Status, data = .)
sp_df_l <- tidy(model_Litt2_Speed)
sp_df_l[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
kable(sp_df_l, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь скорости движения с размером и статусом литторин.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
# Chunk 12
model_Litt2_Sd <-
Barbar %>% filter(Species == "Littorina") %>%
aov(Sd ~ Aperture_size * Status, data = .)
sd_df_l <- tidy(model_Litt2_Sd)
sd_df_l[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
kable(sd_df_l, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь вариабельности движения с размером и статусом литторин.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
# Chunk 13
model_Litt2_Tt <-
Barbar %>% filter(Species == "Littorina") %>%
aov(Turn_time ~ Aperture_size * Status, data = .)
Tt_df_l <- tidy(model_Litt2_Tt)
Tt_df_l[, 1] = c("Размер устья", "Статус", "Размер устья : Стстус", "Остатки")
kable(Tt_df_l, caption = "Табл. ++. Результаты дисперсионного анализа модели, описывающей связь времени начала движения с размером и статусом литторин.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
ggplot(Hydr2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
>>>>>>> f171446dcd0de7db42a36d2d7d84a5727defc285
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
# Chunk 1: setup
library(knitr)
opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
options(knitr.kable.NA = '')
# Chunk 2: packages
library(readxl)
library(ggplot2)
library(dplyr)
library(broom)
library(clipr)
library(bibtex)
# Chunk 3: read_data
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move2$Trait <- factor(snail_move2$Trait)
snail_move2$Trait <- relevel(snail_move2$Trait, ref = "Speed")
snail_move <- read_excel("Data/snail_movement_2023.xlsx", na = "NA")
Litt2 <- snail_move2 %>% filter(Species == "Littorina")
Hydr2 <- snail_move2 %>% filter(Species == "Hydrobia")
Barbar <- snail_move %>% filter(Barbarity == "Barbar")
Litt <- snail_move %>% filter(Species == "Littorina")
Hydr <- snail_move %>% filter(Species == "Hydrobia")
# Chunk 4
ggplot(Hydr2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
# Chunk 5
ggplot(Hydr, aes(y = Speed, x = Aperture_size)) +
geom_point(aes(color = Status)) +
geom_smooth(method = 'lm') +
theme_bw() +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
# Chunk 6
model_Hydr2_sp <-
Barbar %>% filter(Species == "Hydrobia") %>%
aov(Speed ~ Aperture_size * Status, data = .)
sp_df_h <- tidy(model_Hydr2_sp)
sp_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Статус", "Остатки")
kable(sp_df_h, caption = "Табл. 1. Результаты дисперсионного анализа модели, описывающей связь скорости движения с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
# Chunk 7
model_Hydr2_sd <-
Barbar %>% filter(Species == "Hydrobia") %>%
aov(Sd ~ Aperture_size * Status, data = .)
sd_df_h <- tidy(model_Hydr2_sd)
sd_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Статус", "Остатки")
kable(sd_df_h, caption = "Табл. 2. Результаты дисперсионного анализа модели, описывающей связь вариабельности направления движения с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
# Chunk 8
model_Hydr2_Tt <-
Barbar %>% filter(Species == "Hydrobia") %>%
aov(Turn_time ~ Aperture_size * Status, data = .)
Tt_df_h <- tidy(model_Hydr2_Tt)
Tt_df_h[, 1] = c("Размер устья", "Статус", "Размер устья : Статус", "Остатки")
kable(Tt_df_h, caption = "Табл. 3. Результаты дисперсионного анализа модели, описывающей связь времени подготовки к движению с размером и статусом гидробий.", digits = 3, col.names = c("Источник варьирования", "Число степеней свободы", "SS", "MS", "F", "p"))
# Chunk 9
ggplot(Litt2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
guides(color = "none") +
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
guides() +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Hydr, aes(y = Speed, x = Aperture_size)) +
geom_point(aes(color = Status)) +
geom_smooth(method = 'lm') +
theme_bw() +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Hydr, aes(y = Speed, x = Aperture_size)) +
geom_point(aes(color = Status)) +
geom_smooth(method = 'lm') +
theme_bw() +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Hydr, aes(y = Speed, x = Aperture_size)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Hydr, aes(y = Speed, x = Aperture_size)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Barbar, aes(x = Aperture_size, y = Speed, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
xlim(0, 7) +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
ggplot(Hydr, aes(y = Speed, x = Aperture_size, color = Status)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw() +
guides(color = "none") +
labs(x = "Размер устья", y = "Скорость передвижения") +
facet_wrap(~Status)
# Chunk 1: setup
library(knitr)
opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
options(knitr.kable.NA = '')
# Chunk 2: packages
library(readxl)
library(ggplot2)
library(dplyr)
library(broom)
library(clipr)
library(bibtex)
# Chunk 3: read_data
snail_move2 <- read_excel("Data/snail_movement_2023_lenght.xlsx", na = "NA")
snail_move2$Trait <- factor(snail_move2$Trait)
snail_move2$Trait <- relevel(snail_move2$Trait, ref = "Speed")
snail_move <- read_excel("Data/snail_movement_2023.xlsx", na = "NA")
Litt2 <- snail_move2 %>% filter(Species == "Littorina")
Hydr2 <- snail_move2 %>% filter(Species == "Hydrobia")
Barbar <- snail_move %>% filter(Barbarity == "Barbar")
Litt <- snail_move %>% filter(Species == "Littorina")
Hydr <- snail_move %>% filter(Species == "Hydrobia")
ggplot(Hydr2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
Остальные изученные характеристики подвижности гидробий также  не демонстрировали связи с изученными факторами. Исключение составляет скорость движения, которая  демонстрировала статистически значимую, но очень слабую положительную зависимость от размера моллюска (Табл. 2, 3).
ggplot(Hydr2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
ggplot(Litt2, aes(y = Value, x = Status,  fill = Status)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Trait,scales = "free_y") +
labs(x = "Статус", y = "Значение параметра") +
guides(fill = "none")
